{
  "openapi": "3.1.0",
  "info": {
    "title": "API Documentation",
    "description": "A sample API documentation",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://your-api-server.com"
    }
  ],
  "paths": {
    "/user/getUserDailyStatistics": {
      "post": {
        "tags": ["user-controller"],
        "summary": "获取用户每日统计",
        "description": "提供指定租户及日期的业务日报统计数据，包含充值、提现、钱包余额等关键指标。",
        "operationId": "getUserDailyStatistics",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "description": "请求内容类型",
            "schema": {
              "type": "string",
              "example": "multipart/form-data"
            }
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": true,
            "description": "平台方分配的 API-KEY",
            "schema": {
              "type": "string",
              "example": "your-api-key"
            }
          }
        ],
        "requestBody": {
          "description": "每日统计请求参数（JSON 格式）",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDailyStatisticsDto"
              },
              "example": {
                "userId": 1308734,
                "jobDate": "2023-10-25"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "成功响应，返回每日统计结果",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UUDailyStatisticsListVo"
                },
                "example": {
                  "jobDay": "2023-10-01",
                  "totalDepositAmount": 15000.5,
                  "totalDepositCount": 100,
                  "totalDepositUserCount": 50,
                  "totalWithdrawAmount": 8000.25,
                  "totalWithdrawCount": 80,
                  "totalWithdrawUserCount": 40,
                  "pendingCollectionAmount": 200.0,
                  "collectionCount": 10,
                  "pendingCollectionAddressCount": 5,
                  "coldWalletBalance": 1000000.0,
                  "hotWalletBalance": 50000.75,
                  "additionalTransferHotWallet": 1000.0,
                  "tenantId": 1308734
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        }
      }
    },
    "/user/getUserAddress": {
      "post": {
        "tags": ["user-controller"],
        "summary": "获取用户存币地址",
        "description": "获取用户存币地址，若没有该用户会自动注册用户 ID 并返回钱包地址。",
        "operationId": "getUserAddress",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "description": "请求内容类型",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": true,
            "description": "平台方分配的 API-KEY",
            "schema": {
              "type": "string",
              "example": "your-api-key"
            }
          }
        ],
        "requestBody": {
          "description": "用户参数（JSON 格式）用于获取存币地址的请求。若用户不存在，会自动注册。",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDTO"
              },
              "example": {
                "chainName": "TRON",
                "symbol": "USDT",
                "tenantUserId": "tenant123",
                "env": "",
                "userId": 1318758,
                "tenantType": 1
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "成功返回用户存币地址。",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "响应码"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "tenantUserId": {
                          "type": "string",
                          "description": "租户用户标识"
                        },
                        "chainName": {
                          "type": "string",
                          "description": "链名称"
                        },
                        "address": {
                          "type": "string",
                          "description": "钱包地址"
                        },
                        "tag": {
                          "type": "string",
                          "description": "标签（可选）"
                        },
                        "state": {
                          "type": "integer",
                          "description": "地址状态"
                        },
                        "riskScore": {
                          "type": "integer",
                          "description": "风险评分"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "description": "响应消息"
                    }
                  }
                },
                "example": {
                  "code": 0,
                  "data": {
                    "tenantUserId": "tenant123",
                    "chainName": "TRON",
                    "address": "TPXLEfsrochsCB3WiTb7urvnx7wtQZKbFm",
                    "tag": "",
                    "state": 1,
                    "riskScore": 85
                  },
                  "message": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UserDailyStatisticsDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "description": "用户的唯一标识符"
          },
          "jobDate": {
            "type": "string",
            "description": "需要统计的日期，格式为 YYYY-MM-DD"
          }
        },
        "required": ["userId", "jobDate"]
      },
      "UUDailyStatisticsListVo": {
        "type": "object",
        "properties": {
          "jobDay": {
            "type": "string",
            "description": "统计日期"
          },
          "totalDepositAmount": {
            "type": "number",
            "description": "总充值金额"
          },
          "totalDepositCount": {
            "type": "integer",
            "description": "总充值笔数"
          },
          "totalDepositUserCount": {
            "type": "integer",
            "description": "总充值用户数"
          },
          "totalWithdrawAmount": {
            "type": "number",
            "description": "总提现金额"
          },
          "totalWithdrawCount": {
            "type": "integer",
            "description": "总提现笔数"
          },
          "totalWithdrawUserCount": {
            "type": "integer",
            "description": "总提现用户数"
          },
          "pendingCollectionAmount": {
            "type": "number",
            "description": "待收款金额"
          },
          "collectionCount": {
            "type": "integer",
            "description": "收款笔数"
          },
          "pendingCollectionAddressCount": {
            "type": "integer",
            "description": "待收款地址数"
          },
          "coldWalletBalance": {
            "type": "number",
            "description": "冷钱包余额"
          },
          "hotWalletBalance": {
            "type": "number",
            "description": "热钱包余额"
          },
          "additionalTransferHotWallet": {
            "type": "number",
            "description": "额外转入热钱包的资金"
          },
          "tenantId": {
            "type": "integer",
            "description": "租户标识符"
          }
        }
      },
      "UserDTO": {
        "type": "object",
        "properties": {
          "chainName": {
            "type": "string",
            "description": "链名称"
          },
          "symbol": {
            "type": "string",
            "description": "币种符号"
          },
          "tenantUserId": {
            "type": "string",
            "description": "租户用户标识"
          },
          "env": {
            "type": "string",
            "description": "环境标识"
          },
          "userId": {
            "type": "integer",
            "description": "用户唯一标识符"
          },
          "tenantType": {
            "type": "integer",
            "description": "租户类型"
          }
        },
        "required": ["chainName", "symbol", "tenantUserId"]
      }
    },
    "responses": {
      "UnauthorizedError": {
        "description": "用户未授权，需提供有效的身份凭证。",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "code": "UNAUTHORIZED",
              "message": "unauthorized"
            }
          }
        }
      },
      "ForbiddenError": {
        "description": "访问被拒绝，用户许可权不足。",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "code": "FORBIDDEN",
              "message": "forbidden"
            }
          }
        }
      },
      "NotFoundError": {
        "description": "请求的资源未找到，检查 URL 是否正确。",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "code": "NOT FOUND",
              "message": "not found"
            }
          }
        }
      }
    }
  }
}